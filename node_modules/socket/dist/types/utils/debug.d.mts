/**
 * Debug utilities for Socket CLI.
 * Provides structured debugging with categorized levels and helpers.
 *
 * Debug Categories:
 * DEFAULT (shown with SOCKET_CLI_DEBUG=1):
 * - 'error': Critical errors that prevent operation
 * - 'warn': Important warnings that may affect behavior
 * - 'notice': Notable events and state changes
 * - 'silly': Very verbose debugging info
 *
 * OPT-IN ONLY (require explicit DEBUG='category' even with SOCKET_CLI_DEBUG=1):
 * - 'inspect': Detailed object inspection (DEBUG='inspect' or DEBUG='*')
 * - 'stdio': Command execution logs (DEBUG='stdio' or DEBUG='*')
 *
 * These opt-in categories are intentionally excluded from default debug output
 * to reduce noise. Enable them explicitly when needed for deep debugging.
 */
import { debugDir, debugFn, isDebug } from '@socketsecurity/registry/lib/debug';
/**
 * Debug an API response.
 * Logs essential info without exposing sensitive data.
 */
export declare function debugApiResponse(endpoint: string, status?: number | undefined, error?: unknown | undefined): void;
/**
 * Debug file operation.
 * Logs file operations with appropriate level.
 */
export declare function debugFileOp(operation: 'read' | 'write' | 'delete' | 'create', filepath: string, error?: unknown | undefined): void;
/**
 * Debug package scanning.
 * Provides insight into security scanning.
 */
export declare function debugScan(phase: 'start' | 'progress' | 'complete' | 'error', packageCount?: number | undefined, details?: unknown | undefined): void;
/**
 * Debug configuration loading.
 */
export declare function debugConfig(source: string, found: boolean, error?: unknown | undefined): void;
/**
 * Debug git operations.
 * Only logs important git operations, not every command.
 */
export declare function debugGit(operation: string, success: boolean, details?: Record<string, unknown> | undefined): void;
export { debugDir, debugFn, isDebug };
//# sourceMappingURL=debug.d.mts.map