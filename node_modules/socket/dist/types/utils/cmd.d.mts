/**
 * Convert flag values to array format for processing.
 */
export declare function cmdFlagValueToArray(value: any): string[];
/**
 * Convert command arguments to a properly formatted string representation.
 */
export declare function cmdFlagsToString(args: string[] | readonly string[]): string;
/**
 * Add command name prefix to message text.
 */
export declare function cmdPrefixMessage(cmdName: string, text: string): string;
/**
 * Filter out Socket flags from argv before passing to subcommands.
 */
export declare function filterFlags(argv: readonly string[], flagsToFilter: Record<string, any>, exceptions?: string[] | undefined): string[];
/**
 * Extract config flag value from command arguments.
 */
export declare function getConfigFlag(argv: string[] | readonly string[]): string | undefined;
/**
 * Check if command is an add command (adds new dependencies).
 * Supported by: pnpm, yarn.
 * Note: npm uses 'install' with package names instead of 'add'.
 */
export declare function isAddCommand(command: string): boolean;
/**
 * Check if argument is a config flag.
 */
export declare function isConfigFlag(cmdArg: string): boolean;
/**
 * Check if argument is a help flag.
 */
export declare function isHelpFlag(cmdArg: string): boolean;
/**
 * Check if npm command requires lockfile scanning.
 * npm uses: install, i, update
 */
export declare function isNpmLockfileScanCommand(command: string): boolean;
/**
 * Check if pnpm command requires lockfile scanning.
 * pnpm uses: install, i, update, up
 */
export declare function isPnpmLockfileScanCommand(command: string): boolean;
/**
 * Check if yarn command requires lockfile scanning.
 * yarn uses: install, up, upgrade, upgrade-interactive
 */
export declare function isYarnLockfileScanCommand(command: string): boolean;
//# sourceMappingURL=cmd.d.mts.map