import { type GhsaDetails, type Pr } from '../../utils/github.mts';
import type { OctokitResponse } from '@octokit/types';
export type OpenSocketFixPrOptions = {
    baseBranch?: string | undefined;
    cwd?: string | undefined;
    ghsaDetails?: Map<string, GhsaDetails> | undefined;
};
export declare function openSocketFixPr(owner: string, repo: string, branch: string, ghsaIds: string[], options?: OpenSocketFixPrOptions | undefined): Promise<OctokitResponse<Pr> | undefined>;
export type GQL_MERGE_STATE_STATUS = 'BEHIND' | 'BLOCKED' | 'CLEAN' | 'DIRTY' | 'DRAFT' | 'HAS_HOOKS' | 'UNKNOWN' | 'UNSTABLE';
export type GQL_PR_STATE = 'OPEN' | 'CLOSED' | 'MERGED';
export type PrMatch = {
    author: string;
    baseRefName: string;
    headRefName: string;
    mergeStateStatus: GQL_MERGE_STATE_STATUS;
    number: number;
    state: GQL_PR_STATE;
    title: string;
};
export declare function cleanupSocketFixPrs(owner: string, repo: string, ghsaId: string): Promise<PrMatch[]>;
export type PrAutoMergeState = {
    enabled: boolean;
    details?: string[] | undefined;
};
export type SocketPrsOptions = {
    author?: string | undefined;
    ghsaId?: string | undefined;
    states?: 'all' | GQL_PR_STATE | GQL_PR_STATE[];
};
export declare function getSocketFixPrs(owner: string, repo: string, options?: SocketPrsOptions | undefined): Promise<PrMatch[]>;
//# sourceMappingURL=pull-request.d.mts.map